package com.didacusabella.yaspl.visitor;

import com.didacusabella.yaspl.semantic.*;
import com.didacusabella.yaspl.syntax.*;
import java.util.function.Consumer;


/**
 * The code visitor. Generate C99 compliant code
 */
public class CodeVisitor implements Visitor<String, SymbolTable> {

    private static final String C_HEADER = "#include <stdio.h>\n" +
            "#include <stdbool.h>\n";

    private static final String COMMENT_HEADER = "/*This file was generated by yasplcc*/";
    private static final String DECL_HEADER = "/***********Declarations***********/";
    private static final String MAIN_HEADER = "/***********Main*******************/";

  @Override
  public String visit(Program program, SymbolTable param) {
    StringBuilder programBuilder = new StringBuilder();
    programBuilder.append(COMMENT_HEADER);
    programBuilder.append('\n');
    programBuilder.append(C_HEADER);
    programBuilder.append(DECL_HEADER);
    programBuilder.append('\n');
    program.getDeclarations().forEach(this.append(programBuilder, param));
    programBuilder.append('\n');
    programBuilder.append(MAIN_HEADER);
    programBuilder.append("int main(){\n");
    program.getStatements().forEach(this.append(programBuilder, param));
    programBuilder.append("return 0;\n");
    programBuilder.append("}\n");
    return programBuilder.toString();
  }
  
  private Consumer<? super AstNode> append(StringBuilder sb, SymbolTable table) {
    return (AstNode node) -> sb.append(node.accept(this, table));
  }

  @Override
  public String visit(VariableDeclaration variableDeclaration, SymbolTable param) {
    StringBuilder varDeclBuilder = new StringBuilder();
    varDeclBuilder.append(variableDeclaration.getType().accept(this, param));
    variableDeclaration.getVariables().forEach(this.append(varDeclBuilder, param));
    return varDeclBuilder.toString();
  }

  @Override
  public String visit(FunctionDeclaration functionDeclaration, SymbolTable param) {
    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
  }

  @Override
  public String visit(Variable variable, SymbolTable param) {
    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
  }

  @Override
  public String visit(TypeDenoter type, SymbolTable param) {
    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
  }

  @Override
  public String visit(Identifier identifier, SymbolTable param) {
    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
  }

  @Override
  public String visit(ParameterDeclaration parameterDeclaration, SymbolTable param) {
    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
  }

  @Override
  public String visit(Body body, SymbolTable param) {
    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
  }

  @Override
  public String visit(ReadStatement readStatement, SymbolTable param) {
    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
  }

  @Override
  public String visit(WriteStatement writeStatement, SymbolTable param) {
    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
  }

  @Override
  public String visit(FunctionCall functionCall, SymbolTable param) {
    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
  }

  @Override
  public String visit(CompositeStatement compositeStatement, SymbolTable param) {
    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
  }

  @Override
  public String visit(WhileStatement whileStatement, SymbolTable param) {
    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
  }

  @Override
  public String visit(IfThenStatement ifThenStatement, SymbolTable param) {
    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
  }

  @Override
  public String visit(IfThenElseStatement ifThenElseStatement, SymbolTable param) {
    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
  }

  @Override
  public String visit(BinaryExpression binaryExpression, SymbolTable param) {
    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
  }

  @Override
  public String visit(UminusExpression uminusExpression, SymbolTable param) {
    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
  }

  @Override
  public String visit(DoubleConst doubleConst, SymbolTable param) {
    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
  }

  @Override
  public String visit(IntegerConst integerConst, SymbolTable param) {
    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
  }

  @Override
  public String visit(StringConst stringConst, SymbolTable param) {
    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
  }

  @Override
  public String visit(NotExpression notExpression, SymbolTable param) {
    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
  }

  @Override
  public String visit(TrueExpression trueExpression, SymbolTable param) {
    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
  }

  @Override
  public String visit(FalseExpression falseExpression, SymbolTable param) {
    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
  }

  @Override
  public String visit(RelationalExpression relationalExpression, SymbolTable param) {
    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
  }

  @Override
  public String visit(AssignStatement assignStatement, SymbolTable param) {
    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
  }

   
}
